{"ast":null,"code":"var _jsxFileName = \"/Users/mhuanca/Documents/ejercicio-guiado/src/App.js\";\nimport React, { Component } from \"react\"; // Importa React y la clase Component para crear un componente de clase.\nimport \"./estilos/App.css\"; // Importa los estilos del proyecto.\nimport empleadosData from \"./datos/empleados.json\"; // Importa los datos de empleados desde un archivo JSON.\nimport CmpEmpleados from \"./componentes/CmpEmpleados\"; //Importa el componente que mostrará la lista de empleados.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props); // Llama al constructor de la clase `Component`.\n    // Método para filtrar empleados según el estado (activo/inactivo)\n    this.cambiarEstadoEmpleado = id => {\n      this.setState(prevState => ({\n        empleados: prevState.empleados.map(empleado => empleado.id === id ? {\n          ...empleado,\n          activo: !empleado.activo\n        } : empleado)\n      }));\n    };\n    this.cambiarFiltro = event => {\n      this.setState({\n        filtro: event.target.value\n      });\n    };\n    this.state = {\n      empleados: empleadosData,\n      // Carga la lista de empleados desde el JSON.\n      filtro: \"todos\" // Estado inicial del filtro: muestra todos losempleados.\n    };\n  }\n  render() {\n    // Filtrar empleados según la opción seleccionada\n    const empleadosFiltrados = this.state.empleados.filter(empleado => {\n      if (this.state.filtro === \"activos\") return empleado.activo;\n      if (this.state.filtro === \"inactivos\") return !empleado.activo;\n      return true; // \"todos\" muestra todos\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gestor de Empleados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filtrar por estado: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: this.cambiarFiltro,\n        value: this.state.filtro,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"todos\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"activos\",\n          children: \"Activos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inactivos\",\n          children: \"Inactivos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CmpEmpleados, {\n        empleados: empleadosFiltrados,\n        cambiarEstado: this.cambiarEstadoEmpleado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","empleadosData","CmpEmpleados","jsxDEV","_jsxDEV","App","constructor","props","cambiarEstadoEmpleado","id","setState","prevState","empleados","map","empleado","activo","cambiarFiltro","event","filtro","target","value","state","render","empleadosFiltrados","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","cambiarEstado"],"sources":["/Users/mhuanca/Documents/ejercicio-guiado/src/App.js"],"sourcesContent":["import React, { Component } from \"react\"; // Importa React y la clase Component para crear un componente de clase.\nimport \"./estilos/App.css\"; // Importa los estilos del proyecto.\nimport empleadosData from \"./datos/empleados.json\"; // Importa los datos de empleados desde un archivo JSON.\nimport CmpEmpleados from \"./componentes/CmpEmpleados\"; //Importa el componente que mostrará la lista de empleados.\n\nclass App extends Component {\n\nconstructor(props) {\n  super(props); // Llama al constructor de la clase `Component`.\n  this.state = {\n    empleados: empleadosData, // Carga la lista de empleados desde el JSON.\n    filtro: \"todos\", // Estado inicial del filtro: muestra todos losempleados.\n  };\n}\n// Método para filtrar empleados según el estado (activo/inactivo)\ncambiarEstadoEmpleado = (id) => {\n  this.setState((prevState) => ({\n    empleados: prevState.empleados.map((empleado) =>\n        empleado.id === id ? { ...empleado, activo: !empleado.activo } : empleado\n    ),\n  }));\n};\n\ncambiarFiltro = (event) => {\n  this.setState({ filtro: event.target.value });\n};\n\nrender() {\n// Filtrar empleados según la opción seleccionada\n  const empleadosFiltrados = this.state.empleados.filter((empleado) => {\n    if (this.state.filtro === \"activos\") return empleado.activo;\n    if (this.state.filtro === \"inactivos\") return !empleado.activo;\n    return true; // \"todos\" muestra todos\n  });\n\n  return (\n      <div className=\"container\">\n        <h1>Gestor de Empleados</h1>\n        {/* Selector para filtrar empleados */}\n        <label>Filtrar por estado: </label>\n        <select onChange={this.cambiarFiltro} value={this.state.filtro}>\n          <option value=\"todos\">Todos</option>\n          <option value=\"activos\">Activos</option>\n          <option value=\"inactivos\">Inactivos</option>\n        </select>\n        <CmpEmpleados empleados={empleadosFiltrados}\n                      cambiarEstado={this.cambiarEstadoEmpleado} />\n      </div>\n  );\n}\n}\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}